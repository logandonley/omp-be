kind: Template
apiVersion: v1
metadata:
  name: mongodb-petset-replication
objects:

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${APP_NAME}
      labels:
        template: "${APP_NAME}"
    stringData:
      DATABASE_ADMIN_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
      DATABASE_NAME: ${MONGODB_DATABASE}
      DATABASE_PASSWORD: ${MONGODB_PASSWORD}
      DATABASE_USER: ${MONGODB_USER}
      DATABASE_CONNECTION_STRING: "mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${APP_NAME}:27017/${MONGODB_DATABASE}"

  # A headless service to create DNS records
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APP_NAME}"
      annotations:
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    spec:
      clusterIP: None
      ports:
        - name: mongodb
          port: 27017
      selector:
        name: "${APP_NAME}"

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${APP_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        name: ${APP_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${APP_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: DATABASE_USER
                  name: ${APP_NAME}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE_PASSWORD
                  name: ${APP_NAME}
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE_ADMIN_PASSWORD
                  name: ${APP_NAME}
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: DATABASE_NAME
                  name: ${APP_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 27017
              timeoutSeconds: 1
            name: mongodb
            ports:
            - containerPort: 27017
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                  --eval="quit()"
              initialDelaySeconds: 3
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/mongodb/data
              name: ${APP_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - name: ${APP_NAME}-data
            persistentVolumeClaim:
              claimName: ${APP_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mongodb
          from:
            kind: ImageStreamTag
            name: mongodb:${MONGODB_VERSION}
            namespace: ${IMAGESTREAM_NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
parameters:
  - name: MONGODB_USER
    displayName: "MongoDB Connection Username"
    description: "Username for MongoDB user that will be used for accessing the database."
    generate: expression
    from: "[a-zA-Z0-9]{3}"
    required: true

  - name: MONGODB_PASSWORD
    displayName: "MongoDB Connection Password"
    description: "Password for the MongoDB connection user."
    generate: expression
    from: "[a-zA-Z0-9]{16}"
    required: true

  - name: MONGODB_DATABASE
    displayName: "MongoDB Database Name"
    description: "Name of the MongoDB database accessed."
    value: sampledb
    required: true

  - name: MONGODB_ADMIN_PASSWORD
    displayName: "MongoDB Admin Password"
    description: "Password for the database admin user."
    generate: expression
    from: "[a-zA-Z0-9]{16}"
    required: true

  - name: MONGODB_VERSION
    displayName: "MongoDB Container Image"
    description: "A reference to a supported MongoDB container image."
    value: "3.4"
    required: true

  - name: APP_NAME
    displayName: "Application Name"
    value: mongodb
    required: true

  - name: VOLUME_CAPACITY
    displayName: "Volume Capacity"
    description: "Volume space available for data, e.g. 512Mi, 2Gi."
    value: "1Gi"
    required: true

  - name: MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    value: "512Mi"

  - name: IMAGESTREAM_NAMESPACE
    value: openshift